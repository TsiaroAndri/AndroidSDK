package com.digiteka.sdk;

import android.annotation.SuppressLint;
import android.content.Context;
import android.content.SharedPreferences;
import android.preference.PreferenceManager;
import android.content.res.Configuration;
import android.os.Build;
import android.os.Handler;
import android.util.DisplayMetrics;
import android.util.Log;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.LinearLayout;
import android.widget.RelativeLayout;
import android.widget.ScrollView;
import android.widget.Toast;

import androidx.annotation.NonNull;
import androidx.annotation.RequiresApi;
import androidx.appcompat.app.AppCompatActivity;
import androidx.fragment.app.FragmentActivity;
import androidx.fragment.app.FragmentManager;
import androidx.fragment.app.FragmentTransaction;

import java.lang.ref.PhantomReference;
import java.util.Timer;
import java.util.TimerTask;
import java.util.function.Predicate;

import static android.content.Context.MODE_PRIVATE;
import static android.view.ViewGroup.LayoutParams.MATCH_PARENT;
import static android.view.ViewGroup.LayoutParams.WRAP_CONTENT;

public class Digiteka extends DigitekaPlayerWeb {
    public View digitekaContainer;
    public Context context;
    public int margin_V;
    public int margin_H;
    public int sizeVP;
    String mdtk;
    String src;
    String zone;
    String urlreferrer;
    //String tagparamdecoded;
    String gdprconsentstring;
    public String position;
    int autoP; //paramètre de déclenchement du player
    //DigitekaEvent event;
    public RelativeLayout r;
    public Button btn_close;

    public  static Digiteka INSTANCE;
    public DigitekaPlayerWeb playerWebFragment ;
    private int temp0 = 0;
    private /*static*/ int temp100 = 0;
    private /*static*/ int instance = 0;
    private /*static*/ int count = 0;
    private /*static*/ int visible = 0;
    private /*static*/ int count_autoP = 0;
    private /*static*/ int countDown = 0;
    private /*static*/ int visibilityValue = 0;
    private boolean firstApparition = true;
    public boolean buttonClickForAutoplay = false;
    private boolean visibility=true;
    private /*static*/ int countApparition=0;


    @RequiresApi(api = Build.VERSION_CODES.M)
    public Digiteka(View v,
                    Context ctx,
                    String srcParams ,
                    int autoplay ,
                    String urlreferrerParams ,
                    String consentString ,
                    String mdtkParams, String zoneParams,  /*String tagparamdecodedParams*/
                    int size, String pst, int margV, int margH
                      ){
        margin_V=margV;
        margin_H=margH;
        position = pst;
        sizeVP=size;
        digitekaContainer= v;
        context = ctx;
        //event = (DigitekaEvent) ctx;
        mdtk=mdtkParams;
        src=srcParams;
        zone=zoneParams;
        urlreferrer=urlreferrerParams;
        gdprconsentstring=consentString;
        //tagparamdecoded=tagparamdecodedParams;
        autoP=autoplay;

        showPlayer();

        Log.e("CONST","OK") ;

    }

    public Digiteka() {

    }

    @RequiresApi(api = Build.VERSION_CODES.M)
    public static void init(View view,
                                Context context,
                                String VideoID ,
                                int mode ,
                                String URL_REFERRER ,
                                String Consent_String ,
                                String MDTK, String ZONE , /*String tagparamdecodedParams*/
                                int size, String position, int margV, int margH
                               ){
        //if(INSTANCE == null){
            INSTANCE = new Digiteka(view,
                    context,
                    VideoID ,
                    mode,
                    URL_REFERRER ,
                    Consent_String,
                    MDTK, ZONE , /*tagparamdecodedParams*/
                    size, position, margV, margH);
            Log.e("NULL","OK") ;
       // }

        Log.e("NOT NULL","OK") ;
    }

    public char charH(String p){
        String[] mots;
        char varcharH;
        mots = p.split("_");
        varcharH= mots[1].charAt(0);
        return varcharH;
    }

    public char charV(String p){
        String[] mots;
        char varcharV;
        mots = p.split("_");
        varcharV= mots[0].charAt(0);
        return varcharV;
    }

    public int setMargin_H(int p) {
        int M_H;
        M_H = p*10;
        return M_H;
    }

    public int setMargin_V(int p) {
        int M_V;
        M_V = p*10;
        return M_V;
    }


    /**
     * retourne la Taille du Visible Player en %
     * @param taille
     * @return
     */
    public int setSize(int taille) {
        DisplayMetrics metrics = new DisplayMetrics();
        SharedPreferences preferences = PreferenceManager.getDefaultSharedPreferences(((AppCompatActivity)context));
        SharedPreferences.Editor editor = preferences.edit();

        ((AppCompatActivity)context).getWindowManager().getDefaultDisplay().getMetrics(metrics);
        int result=0;
        if (metrics.heightPixels > metrics.widthPixels) {
            result= (metrics.widthPixels * taille)/100;
            editor.putInt("result_size", result);
            editor.apply();
        }
        else if (metrics.heightPixels < metrics.widthPixels){
            result = preferences.getInt("result_size",0);

            //result= (metrics.widthPixels * (taille/2)) /100;
        }
        //result= (metrics.widthPixels * taille)/100;
        return  result;
    }

    public int setSizeHeight(int taille){
        int resultSetSizeHeight = 0;
        resultSetSizeHeight = (setSize(taille) * 9)/16;
        return (int)resultSetSizeHeight;
    }


    @SuppressLint("ResourceAsColor")
    @RequiresApi(api = Build.VERSION_CODES.M)
    public void showPlayer() {


        if(autoP!=1){
             playerWebFragment = new DigitekaPlayerWeb(mdtk,src,zone,urlreferrer,gdprconsentstring,MATCH_PARENT, 750 /*tagparamdecoded*/);
        }
        else{
            playerWebFragment = new DigitekaPlayerWeb(mdtk,src,zone,urlreferrer,gdprconsentstring,setSize(sizeVP),setSizeHeight(sizeVP) /*tagparamdecoded*/);
        }

         // playerWebFragment = new DigitekaPlayerWeb(mdtk,src,zone,urlreferrer,gdprconsentstring,MATCH_PARENT, 750 /*tagparamdecoded*/);

        Log.e("WIDHT_VP","WIDHT ="+setSize(sizeVP));
        Log.e("HEIGHT_VP","HEIGHT ="+setSizeHeight(sizeVP));
          LinearLayout digiteka = new LinearLayout(context);
          digiteka.setId(View.generateViewId());
          LinearLayout.LayoutParams llp = new LinearLayout.LayoutParams(MATCH_PARENT, WRAP_CONTENT);

          ((ViewGroup)digitekaContainer).addView(digiteka, llp);



           Log.e("TEST","mdtk="+mdtk);
           FragmentManager fm = ((FragmentActivity)context).getSupportFragmentManager();
           FragmentTransaction ft=fm.beginTransaction();

           ft.add(digiteka.getId(), playerWebFragment, "player").commit();
            //ft.add(digitekaContainer.getId(), playerWebFragment, "player").commit();


           //recherche du view parent du container du digiteka
           View parent = (View) digitekaContainer.getParent();
           View parentdigiteka=parent;
           if (parent==null){
               Log.e("TEST", "digiteka.Container.getParent() is null");
           }
           else{
              while(!(parent instanceof  ScrollView)){
                  View newparent = (View) ((ViewGroup) parent).getParent();
                  parent=newparent;
              }
           }

           //Ajout du View dynamique pour la vue digiteka d'en haut dans le View GrandParent
            ViewGroup grandparent = (ViewGroup) parent.getParent();

            /** CREATION DU LAYOUT DU VISIBLE PLAYER**/
            RelativeLayout toplayout = new RelativeLayout(context);
            toplayout.setId(View.generateViewId());

            /** CREATION DU LAYOUT INFLATER POUR LE CONTAINER DIGITEKA **/
            LayoutInflater inflater = (LayoutInflater)context.getSystemService(Context.LAYOUT_INFLATER_SERVICE);
            RelativeLayout.LayoutParams params = new RelativeLayout.LayoutParams(setSize(sizeVP),setSizeHeight(sizeVP));

            /** DECALAGE DU VISIBLE PLAYER PAR RAPPORT AU BORD DE L'ECRAN**/
            if ((charH(position)=='l')&&(charV(position)=='t')){ // TODO : top_left
                params.setMargins(setMargin_H(margin_H),setMargin_V(margin_V),0,0);
                View v = inflater.inflate(R.layout.top_left, null);
                r= v.findViewById(R.id.top_left);
                r.setLayoutParams(params);
                btn_close = v.findViewById(R.id.btn_close);
                ViewGroup.LayoutParams pp = new ViewGroup.LayoutParams(WRAP_CONTENT,WRAP_CONTENT);
                r.addView(toplayout);
                ((AppCompatActivity)context).addContentView(v,pp);

            }
            else if  ((charH(position)=='l')&&(charV(position)=='b')) { // TODO : bottom_left
                params.setMargins(setMargin_H(margin_H),0,0,0);
                View v = inflater.inflate(R.layout.bottom_left, null);
                r= v.findViewById(R.id.bottom_left);
                params.addRule(RelativeLayout.ALIGN_PARENT_LEFT);
                params.addRule(RelativeLayout.ALIGN_PARENT_BOTTOM);
                v.setPadding(0,0,0,setMargin_V(margin_V));
                r.setLayoutParams(params);
                btn_close = v.findViewById(R.id.btn_close);
                r.addView(toplayout);
                ViewGroup.LayoutParams pp = new ViewGroup.LayoutParams(WRAP_CONTENT,WRAP_CONTENT);
                ((AppCompatActivity)context).addContentView(v,pp);

            }
            else if  ((charH(position)=='r')&&(charV(position)=='t')) { // TODO : top_right
                params.setMargins(0,setMargin_V(margin_V),setMargin_H(margin_H),0);
                View v = inflater.inflate(R.layout.top_right, null);
                r= v.findViewById(R.id.top_right);
                params.addRule(RelativeLayout.ALIGN_PARENT_RIGHT);
                r.setLayoutParams(params);
                btn_close = v.findViewById(R.id.btn_close);
                r.addView(toplayout);
                ViewGroup.LayoutParams pp = new ViewGroup.LayoutParams(WRAP_CONTENT,WRAP_CONTENT);
                ((AppCompatActivity)context).addContentView(v,pp);

            }
            else if  ((charH(position)=='r')&&(charV(position)=='b')) { // TODO : bottom_right
                params.setMargins(0,0,setMargin_H(margin_H),0);
                View v = inflater.inflate(R.layout.bottom_right, null);
                r= v.findViewById(R.id.bottom_right);
                params.addRule(RelativeLayout.ALIGN_PARENT_RIGHT);
                params.addRule(RelativeLayout.ALIGN_PARENT_BOTTOM);
                v.setPadding(0,0,0,setMargin_V(margin_V));
                r.setLayoutParams(params);
                btn_close = v.findViewById(R.id.btn_close);
                r.addView(toplayout);
                ViewGroup.LayoutParams pp = new ViewGroup.LayoutParams(WRAP_CONTENT,WRAP_CONTENT);
                ((AppCompatActivity)context).addContentView(v,pp);

            }

            btn_close.setVisibility(View.INVISIBLE);

            if(autoP==1){
                playerWebFragment.Autoplay(1);
                firstApparition=false;
                if ((digiteka.getParent() != null))  {
                   ((ViewGroup)digiteka.getParent()).removeView(digiteka);
                   // playerWebFragment.changeDimension(setSize(sizeVP),315);
                    toplayout.addView(digiteka);
                }
                //r.setVisibility(View.VISIBLE);
                btn_close.setVisibility(View.VISIBLE);
                btn_close.setOnClickListener(new View.OnClickListener() {
                    @Override
                    public void onClick(View v) {
                        firstApparition=true;
                        r.setVisibility(View.INVISIBLE);
                        btn_close.setVisibility(View.INVISIBLE);

                        buttonClickForAutoplay=true;
                    }
                });
                temp0++;

            }

            Log.e("TEST", " buttonClickForAutoplay = "+buttonClickForAutoplay);

        //Detection de l'évenement Scroll
           parent.setOnScrollChangeListener(new View.OnScrollChangeListener() {
               @Override
               public void onScrollChange(View v, int scrollX, int scrollY, int oldScrollX, int oldScrollY) {

                   //Obtenir la hauteur de l'écran
                   int demi= digitekaContainer.getHeight() / 2;
                   int quart= (3 * digitekaContainer.getHeight()) / 4;
                   DisplayMetrics metrics = new DisplayMetrics();
                   ((AppCompatActivity)context).getWindowManager().getDefaultDisplay().getMetrics(metrics);
                   int screenHeight= metrics.heightPixels;
                   Log.e("TEST", "Display height in px is " + screenHeight);

                   Log.e("TEST","HAUTEUR du Digiteka:" + digitekaContainer.getHeight());
                   Log.e("TEST","PositionY du Digiteka:" + digitekaContainer.getY());
                   Log.d("TEST", "onScrollChangeForY - scrollY: " + scrollY + " oldScrollY: " + oldScrollY);

                   //TODO : Check display view 100%
                   if ((((scrollY + screenHeight) >= (digitekaContainer.getY() + demi)) && (digitekaContainer.getY() >=scrollY))
                        || ((scrollY <= (digitekaContainer.getY() + demi)) && ((digitekaContainer.getY() + digitekaContainer.getHeight()) <= (scrollY + screenHeight))))
                   {
                       Log.e("TEST" , "Vue 100% du DIGITEKA");
                       if(buttonClickForAutoplay){
                           if(countApparition==0) {
                               //firstApparition = true;
                               ((ViewGroup) digiteka.getParent()).removeView(digiteka);
                               playerWebFragment.changeDimension(MATCH_PARENT, 750);
                               ((ViewGroup) digitekaContainer).addView(digiteka);
                               countApparition++;
                           }
                       }
                       else{

                           firstApparition =false;
                           visibility= visibilityValue < 1;
                           temp0=0;
                           if(temp100>0 && (visibility)){
                               if (instance==0) {
                                   if ((digiteka.getParent() != null))  {
                                       playerWebFragment.changeDimension(MATCH_PARENT, 750);
                                       digiteka.setVisibility(View.INVISIBLE);
                                       ((ViewGroup) digiteka.getParent()).removeView(digiteka);
                                       ((ViewGroup) digitekaContainer).addView(digiteka);

                                       Handler h = new Handler();
                                       TimerTask task = new TimerTask() {
                                           public void run() {
                                               h.post(new Runnable(){
                                                   @Override
                                                   public void run() {
                                                       digiteka.setVisibility(View.VISIBLE);
                                                   }
                                               });
                                           }
                                       };
                                       Timer timer = new Timer();
                                       timer.schedule(task, 200);}
                                   instance++;
                               }
                           }
                           switch (autoP){
                               case 0:{
                                   playerWebFragment.changeControll(false);
                                   break;
                               }
                               case 2:{
                                   if(count==0)
                                   {
                                       playerWebFragment.changeControll(true);
                                   }
                               }
                               break;
                               default:{
                                   Log.e("AUTOPLAY", "AUTOPLAY Activé");
                               }
                           }
                           count++;
                           r.setVisibility(View.INVISIBLE);
                           btn_close.setVisibility(View.INVISIBLE);

                           visible=0;
                       }
                       //firstApparition = false;

                   }

                   //TODO : Check display view 0%
                   else {
                       if (((scrollY + screenHeight) <= (digitekaContainer.getY())) //--------------------VUE 0%
                                   || (scrollY >= (digitekaContainer.getY() +digitekaContainer.getHeight())))
                               {
                                   Log.e("TEST", "Vue 0% du DIGITEKA");

                                  // TODO : création du VISIBLE PLAYER

                                            instance=0;
                                            if (temp0==0){
                                                if((digiteka.getParent() != null) && (visibility)) {
                                                    ((ViewGroup)digiteka.getParent()).removeView(digiteka);
                                                    playerWebFragment.changeDimension(setSize(sizeVP),setSizeHeight(sizeVP));
                                                   // toplayout.addView(btnclose,lp);
                                                    toplayout.addView(digiteka);
                                                }
                                                temp0++;
                                            }
                                            temp100++;
                                            if(firstApparition){
                                                // toplayout.setVisibility(View.INVISIBLE);
                                                if(countDown==0) {
                                                    r.setVisibility(View.INVISIBLE);
                                                    btn_close.setVisibility(View.INVISIBLE);
                                                    visibility = false;
                                                    visibilityValue=0;
                                                    ((ViewGroup) digiteka.getParent()).removeView(digiteka);
                                                    playerWebFragment.changeDimension(MATCH_PARENT, 750);
                                                    ((ViewGroup) digitekaContainer).addView(digiteka);
                                                    countDown++;
                                                }
                                            }

                                            else {
                                                if((visibility && playerWebFragment.videoStatus) /*|| (visibility && !playerWebFragment.videoStatus)*/){
                                                    r.setVisibility(View.VISIBLE);
                                                    btn_close.setVisibility(View.VISIBLE);
                                                }
                                                else if(visibility){
                                                    r.setVisibility(View.INVISIBLE);
                                                    btn_close.setVisibility(View.INVISIBLE);
                                                }
                                            }

                                            // fermeture du visible Player
                                            btn_close.setOnClickListener(new View.OnClickListener() {
                                                @Override
                                                public void onClick(View v) {
                                                    r.setVisibility(View.INVISIBLE);
                                                    visibility=false;
                                                    visibilityValue=1;
                                                    ((ViewGroup) digiteka.getParent()).removeView(digiteka);
                                                    playerWebFragment.changeDimension(MATCH_PARENT, 750);
                                                    ((ViewGroup) digitekaContainer).addView(digiteka);
                                                }
                                            });
                               }

                   }
               }
           });

           //event.sdkReady();
       }

}

